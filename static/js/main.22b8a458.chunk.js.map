{"version":3,"sources":["components/Search.js","components/City.js","components/Spinner.js","components/WeatherDay.js","components/WeatherDetail.js","apis/openWeather.js","apis/openCage.js","components/App.js","index.js"],"names":["Search","props","react_default","a","createElement","className","type","placeholder","onChange","handleSearchChange","value","onClick","handleClick","City","this","location","React","Component","Spinner","WeatherDay","getLocalWeather","_this","console","log","weatherData","components_Spinner","filter","e","isDaytime","map","key","startTime","onDaySelect","number","name","src","icon","alt","temperature","WeatherDetail","renderDays","selectedDay","weather","dayWeather","nightWeather","detailedForecast","axios","create","baseURL","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","regenerator_default","mark","_callee","searchLocation","updatedWeather","wrap","_context","prev","next","getLatLong","state","searchInput","sent","updateWeather","lat","lng","setState","data","results","geometry","formatted","stop","event","target","_callee2","newLocation","newWeather","currentCity","_context2","fetchLocation","fetchWeather","fetchCurrentCity","locationData","Promise","_ref3","_callee3","success","error","_context3","window","navigator","geolocation","getCurrentPosition","position","positionResponse","coords","latitude","long","longitude","err","_x","_x2","apply","arguments","_ref4","_ref5","_callee4","response","gridURL","forecast","_context4","get","concat","properties","periods","t0","_x3","_x4","_ref6","_callee5","_context5","_x5","_x6","search","_ref7","_callee6","_context6","addressData","_x7","_x8","_ref8","_ref9","_callee7","_context7","_x9","_x10","_ref10","_callee8","day","night","_context8","_x11","_x12","bind","assertThisInitialized","id","components_Search","components_City","components_WeatherDay","components_WeatherDetail","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.22b8a458.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = props => {\n  return (\n    <div className=\"ui input\">\n      <input\n        className=\"prompt\"\n        type=\"text\"\n        placeholder=\"Enter Address\"\n        onChange={props.handleSearchChange}\n      />\n\n      <input\n        type=\"button\"\n        value=\"Get Location\"\n        className=\"ui primary button\"\n        onClick={props.handleClick}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nclass City extends React.Component {\n  render() {\n    return (\n      <div className=\"white\">\n        Currently Displaying Weather For: {this.props.location}\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default City;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">Loading... </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport Spinner from \"./Spinner\";\n\nclass WeatherDay extends Component {\n  componentDidMount() {\n    this.props.getLocalWeather();\n  }\n\n  render() {\n    console.log(this.props.weatherData);\n    if (this.props.weatherData === null) {\n      return (\n        <div className=\"spinner\">\n          <Spinner />\n        </div>\n      );\n    }\n\n    const weather = this.props.weatherData;\n    const dayWeather = weather.filter(e => {\n      return e.isDaytime === true;\n    });\n\n    return dayWeather.map(e => {\n      return (\n        <div\n          className=\"ui segment papaya\"\n          key={e.startTime}\n          onClick={() => this.props.onDaySelect(e.number, e.number + 1)}\n        >\n          <div className=\"ui center  aligned header\">{e.name}</div>\n          <div className=\"ui center  aligned header\">\n            <div className=\"ui center  aligned  header\">\n              <img src={e.icon} alt=\"icon\" />\n            </div>\n            <div className=\"ui center aligned  header\">{e.temperature}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n}\n\nexport default WeatherDay;\n","import React, { Component } from \"react\";\n\nclass WeatherDetail extends Component {\n  componentDidUpdate() {}\n\n  render() {\n    const renderDays = this.props.selectedDay;\n    const weather = this.props.weatherData;\n    if (!this.props.selectedDay) {\n      return (\n        <div className=\"ui container segment papaya\">\n          To seedetailed forcast please click on a day...\n        </div>\n      );\n    }\n    const dayWeather = weather.filter(e => {\n      return e.number === renderDays[0];\n    });\n    const nightWeather = weather.filter(e => {\n      return e.number === renderDays[1];\n    });\n    return (\n      <div className=\"details\">\n        <div className=\"ui segments \">\n          <div className=\"ui segment papaya\">\n            <h2>{dayWeather[0].name}</h2>\n            <img\n              className=\"ui centered rounded small image\"\n              src={dayWeather[0].icon}\n              alt=\"icon\"\n            />\n\n            <h5>{dayWeather[0].detailedForecast}</h5>\n          </div>\n          <div className=\"ui secondary segment \">\n            <h2>{nightWeather[0].name}</h2>\n            <img\n              className=\"ui centered rounded small image\"\n              src={nightWeather[0].icon}\n              alt=\"icon\"\n            />\n\n            <h5>{nightWeather[0].detailedForecast}</h5>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeatherDetail;\n","import axios from \"axios\";\n\nexport default axios.create({\n baseURL: 'https://api.weather.gov'\n});\n\n\n","import axios from \"axios\";\n\nexport default axios.create({\n\tbaseURL: \"https://api.opencagedata.com/geocode/v1/json\"\n});\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Search from \"./Search\";\nimport City from \"./City\";\nimport WeatherDay from \"./WeatherDay\";\nimport WeatherDetail from \"./WeatherDetail\";\nimport weatherData from \"../apis/openWeather\";\nimport addressData from \"../apis/openCage\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null,\n      locationData: [],\n      selectedDay: null,\n      searchInput: [],\n      lat: 41,\n      lng: -88,\n      location: \"\"\n    };\n    this.fetchWeather = this.fetchWeather.bind(this);\n    this.getLocalWeather = this.getLocalWeather.bind(this);\n    this.fetchLocation = this.fetchLocation.bind(this);\n    this.fetchCurrentCity = this.fetchLocation.bind(this);\n    this.onDaySelect = this.onDaySelect.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.updateWeather = this.updateWeather.bind(this);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getLatLong = this.getLatLong.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <div className=\"ui container\">\n          <h1 className=\"ui center white aligned header\"> Weather App </h1>\n          <div className=\"search\">\n            <Search\n              name=\"City\"\n              handleSearchChange={this.handleSearchChange}\n              handleClick={this.handleClick}\n            />\n          </div>\n          <City location={this.state.location} />\n          <div className=\"ui container horizontal segments\">\n            <WeatherDay\n              getLocalWeather={this.getLocalWeather}\n              weatherData={this.state.weatherData}\n              onDaySelect={this.onDaySelect}\n            />\n          </div>\n          <WeatherDetail\n            weatherData={this.state.weatherData}\n            selectedDay={this.state.selectedDay}\n          />\n        </div>\n        <div id=\"footer\">\n          {\" \"}\n          <p className=\"love\">Made with ❤️ in Chicago</p>\n        </div>\n      </div>\n    );\n  }\n\n  handleClick = async () => {\n    let searchLocation = await this.getLatLong(this.state.searchInput);\n    let updatedWeather = await this.updateWeather(\n      this.state.lat,\n      this.state.lng\n    );\n\n    this.setState({\n      lat: searchLocation.data.results[0].geometry.lat,\n      lng: searchLocation.data.results[0].geometry.lng,\n      location: searchLocation.data.results[0].formatted,\n      weatherData: updatedWeather\n    });\n    console.log(this.state);\n  };\n  handleSearchChange = event => {\n    this.setState({ searchInput: event.target.value });\n  };\n\n  getLocalWeather = async () => {\n    let newLocation = await this.fetchLocation();\n    let newWeather = await this.fetchWeather(newLocation);\n    let currentCity = await this.fetchCurrentCity(newLocation);\n\n    this.setState({ weatherData: newWeather, locationData: currentCity });\n    console.log(this.state.weatherData);\n    console.log(this.state.locationData);\n  };\n  fetchLocation = () => {\n    return new Promise(async (success, error) => {\n      window.navigator.geolocation.getCurrentPosition(\n        position => {\n          const positionResponse = {\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          };\n\n          success(positionResponse);\n        },\n        err => {\n          error(err);\n        }\n      );\n    });\n  };\n  fetchWeather = ({ lat, long }) => {\n    return new Promise(async (success, error) => {\n      try {\n        const response = await weatherData.get(`/points/${lat},${long}`);\n        const gridURL = response.data.properties.forecast;\n        const forecast = await axios.get(gridURL);\n\n        success(forecast.data.properties.periods);\n      } catch (err) {\n        error(err);\n      }\n    });\n  };\n\n  updateWeather = (lat, long) => {\n    return new Promise(async (success, error) => {\n      try {\n        const response = await weatherData.get(`/points/${lat},${long}`);\n        const gridURL = response.data.properties.forecast;\n        const forecast = await axios.get(gridURL);\n\n        success(forecast.data.properties.periods);\n      } catch (err) {\n        error(err);\n      }\n    });\n  };\n\n  getLatLong = search => {\n    return new Promise(async (success, error) => {\n      try {\n        const response = await addressData.get(\n          `?q=${search}&key=bf6078b1e5eb41e38e78ea3209e0817c`\n        );\n\n        success(response);\n      } catch (err) {\n        error(err);\n      }\n    });\n  };\n  fetchCurrentCity = ({ lat, long }) => {\n    return new Promise(async (success, error) => {\n      try {\n        const response = await addressData.get(\n          `?q=${lat}+${long}&key=bf6078b1e5eb41e38e78ea3209e0817c`\n        );\n\n        success(response);\n      } catch (err) {\n        error(err);\n      }\n    });\n  };\n  onDaySelect = async (day, night) => {\n    let selectedDay = await [day, night];\n    this.setState({ selectedDay: selectedDay });\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}